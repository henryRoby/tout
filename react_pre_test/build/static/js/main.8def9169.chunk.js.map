{"version":3,"sources":["components/create.component.js","components/edit.component.js","components/TableRow.js","components/index.component.js","App.js","serviceWorker.js","index.js"],"names":["Create","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangePersonName","bind","assertThisInitialized","onChangeBusinessName","onChangeGstNumber","onSubmit","state","nom","prenom","e","setState","target","value","age","preventDefault","obj","axios","post","then","res","console","log","data","react_default","a","createElement","style","marginTop","align","className","type","onChange","Component","Edit","_this2","get","match","params","id","response","catch","error","history","push","TableRow","delete","_id","err","Link","to","onClick","Index","business","map","object","i","components_TableRow","key","colSpan","tabRow","App","BrowserRouter","class","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8def9169.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Create extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePersonName = this.onChangePersonName.bind(this);\n    this.onChangeBusinessName = this.onChangeBusinessName.bind(this);\n    this.onChangeGstNumber = this.onChangeGstNumber.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      nom: '',\n      prenom: '',\n     \n    }\n  }\n  onChangePersonName(e) {\n    this.setState({\n      nom: e.target.value\n    });\n  }\n  onChangeBusinessName(e) {\n    this.setState({\n      prenom: e.target.value\n    })  \n  }\n  onChangeGstNumber(e) {\n    this.setState({\n      age: e.target.value\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const obj = {\n      nom: this.state.nom,\n      prenom: this.state.prenom,\n      age: this.state.age\n    };\n    axios.post('https://nodeonline.herokuapp.com/add', obj)\n        .then(res => console.log(res.data));\n    \n    this.setState({\n      nom: '',\n      prenom: '',\n      age: ''\n    })\n  }\n \n  render() {\n    return (\n        <div style={{ marginTop: 10 }}>\n            <h3 align=\"center\">Ajouter un nouvel utilisateur</h3>\n            <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                   <label>Nom:  </label>\n                    <input \n                      type=\"text\" \n                      className=\"form-control\" \n                      value={this.state.nom}\n                      onChange={this.onChangePersonName}\n                      />\n                </div>\n                <div className=\"form-group\">\n                    <label>PrÃ©nom: </label>\n                    <input type=\"text\" \n                      className=\"form-control\"\n                      value={this.state.prenom}\n                      onChange={this.onChangeBusinessName}\n                      />\n                </div>\n                \n                <div className=\"form-group\">\n                    <input type=\"submit\" \n                      value=\"Enregistrer\" \n                      className=\"btn btn-primary\"/>\n                </div>\n            </form>\n        </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangePersonName = this.onChangePersonName.bind(this);\n    this.onChangeBusinessName = this.onChangeBusinessName.bind(this);\n    this.onChangeGstNumber = this.onChangeGstNumber.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      nom: '',\n      prenom: '',\n      \n    }\n  }\n\n  componentDidMount() {\n      axios.get('https://nodeonline.herokuapp.com/editer/:id'+this.props.match.params.id)\n          .then(response => {\n              this.setState({ \n                nom: response.data.nom, \n                prenom: response.data.prenom,\n                age: response.data.age });\n          })\n          .catch(function (error) {\n              console.log(error);\n          })\n    }\n\n  onChangePersonName(e) {\n    this.setState({\n      nom: e.target.value\n    });\n  }\n  onChangeBusinessName(e) {\n    this.setState({\n      prenom: e.target.value\n    })  \n  }\n  onChangeGstNumber(e) {\n    this.setState({\n      age: e.target.value\n    })\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const obj = {\n      nom: this.state.nom,\n      prenom: this.state.prenom,\n      \n    };\n    axios.post('https://nodeonline.herokuapp.com/maj/:id/'+this.props.match.params.id, obj)\n        .then(res => console.log(res.data));\n    \n    this.props.history.push('/lister');\n  }\n \n  render() {\n    return (\n        <div style={{ marginTop: 10 }}>\n            <h3 align=\"center\">Modifier Utilisateurs</h3>\n            <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                    <label>Nom:  </label>\n                    <input \n                      type=\"text\" \n                      className=\"form-control\" \n                      value={this.state.nom}\n                      onChange={this.onChangePersonName}\n                      />\n                </div>\n                <div className=\"form-group\">\n                    <label>Prenom: </label>\n                    <input type=\"text\" \n                      className=\"form-control\"\n                      value={this.state.prenom}\n                      onChange={this.onChangeBusinessName}\n                      />\n                </div>\n                \n                <div className=\"form-group\">\n                    <input type=\"submit\" \n                      value=\"Modifier utilisateur\" \n                      className=\"btn btn-primary\"/>\n                </div>\n            </form>\n        </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass TableRow extends Component {\n\n  constructor(props) {\n        super(props);\n        this.delete = this.delete.bind(this);\n    }\n    delete() {\n        axios.get('https://nodeonline.herokuapp.com/deletes/:id'+this.props.obj._id)\n\n            .then(console.log('Deleted'))\n            .catch(err => console.log(err))\n    }\n  render() {\n    return (\n        <tr>\n          <td>\n            {this.props.obj.nom}\n          </td>\n          <td>\n            {this.props.obj.prenom}\n          </td>\n         \n          <td>\n            <Link to={\"/editer/:id\"+this.props.obj._id} className=\"btn btn-primary\">Edit</Link>\n          </td>\n          <td>\n            <button onClick={this.delete} className=\"btn btn-danger\">Delete</button>\n          </td>\n        </tr>\n    );\n  }\n}\n\nexport default TableRow;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport TableRow from './TableRow';\n\nexport default class Index extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {business: []};\n    }\n    componentDidMount(){\n      axios.get('https://nodeonline.herokuapp.com/lister/')\n        .then(response => {\n          this.setState({ business: response.data });\n        })\n        .catch(function (error) {\n          console.log(error);\n        })\n    }\n    tabRow(){\n      return this.state.business.map(function(object, i){\n\n        console.log(object)\n          return <TableRow obj={object} key={i} />;\n      });\n    }\n\n    render() {\n      return (\n        <div>\n          <h3 align=\"center\">Liste d'utilisateurs</h3>\n          <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n            <thead>\n              <tr>\n                <th>Nom</th>\n                <th>Prenom</th>\n                <th colSpan=\"2\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              { this.tabRow() }\n            </tbody>\n          </table>\n        </div>\n      );\n    }\n  }","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport Create from './components/create.component';\nimport Edit from './components/edit.component';\nimport Index from './components/index.component';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n        <div class=\"container-fluid\">\n         <div class=\"navbar-header\">\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <Link to={'/'} className=\"navbar-brand\">React Front Test</Link>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n              <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                  <Link to={'/'} className=\"nav-link\">Acceuil</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to={'/add'} className=\"nav-link\">CrÃ©er utilisateurs</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to={'/indexer'} className=\"nav-link\">Liste d'utilisateurs</Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <Switch>\n              <Route exact path='/add' component={ Create } />\n              <Route path='/editer/:id' component={ Edit } />\n              <Route path='/indexer' component={ Index } />\n          </Switch>\n          </div>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n  <App />\n  </BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}